plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'pl.allegro.tech.build.axion-release' version '1.13.6'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
    id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    set('springCloudVersion', "2021.0.0")
    set('openApiVersion', "1.6.5")
}

dependencies {

//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc' // Use this for DB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webflux-ui', version: "${openApiVersion}"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

repositories {
    mavenLocal()
    mavenCentral()
    google()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }

}

// Plugin Configs
// ------------------------------- Checkstyle -------------------------------
checkstyle {
    toolVersion = 9.3
    configFile file('plugin-config/checkstyle/google_checkstyle.xml')
    ignoreFailures = false
}
// ------------------------------- Checkstyle END-------------------------------

// ------------------------------- Jacoco -------------------------------
jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
        rule {
            enabled = false
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}
// ------------------------------- Jacoco END-------------------------------

// Sonar

